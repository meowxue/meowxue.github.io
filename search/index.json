[{"content":"事情是这样的，我用java写了个运维的程序，在服务器上定时给我发送程序的运行状态和日志。写好后放到服务器上做了一个定时任务，通过windows自带的计划任务来执行bat脚本。但是我发现双击bat脚本执行是没有问题的，但是在计划任务执行的时候就会失败，运行结果为0x1。\n报错原因：程序和脚本中的bat脚本带有目录结构，但是起始的哪里没有配置批处理脚本所在目录路径\n计划任务编辑操作.png 在红框处配置bat脚本文件的路径就可以执行成功了。\n","date":"2024-06-05T00:00:00Z","image":"https://api.r10086.com/樱道随机图片api接口.php?图片系列=动漫综合1\u00263","permalink":"https://meowxue.github.io/p/windows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C%E4%B8%BA0x1/","title":"Windows计划任务执行结果为0x1"},{"content":"脚本准备 rem delete 10 days files forfiles /p \u0026#34;文件路径\u0026#34; /d -10 /c \u0026#34;cmd /c echo deleting @file ... \u0026amp;\u0026amp; del /f @path\u0026#34; rem expdp sz set sz_file=备份文件名字%date:~0,4%%date:~5,2%%date:~8,2% expdp 数据库用户名/数据库密码@数据库实例名 directory=路径对象 dumpfile=%sz_file%.dmp logfile=%sz_file%.log schemas=导出的用户 compression=all 在合适的位置新建一个.bat文件，将上面的脚本复制到里面，再根据下面的说明修改好脚本。\n注：如果密码中存在特殊字符，需要做特殊处理，如：\nzhangsan/\u0026#34;\u0026#34;\u0026#34;abc@123\u0026#34;\u0026#34;\u0026#34;@orcl 文件路径: 备份文件所在目录\n-10: 删除两天前的文件，也就是说保留两天的数据，可根据实际情况修改\n备份文件名字: 此处为前缀加时间的格式 例如：xxxxx202308025120000.dmp\n数据库实例名: 如：orcl，有时候可能需要补全ip地址，如：192.168.3.10/orcl\n路径对象: 导出文件目录，此处的目录和平常的目录不同，这是存在于数据库中的目录对象，要使用这个对象需要用sql命令来创建\nCREATE DIRECTORY hrpbackup AS \u0026#39;备份文件要存放的路径\u0026#39;; SELECT directory_name, directory_path FROM all_directories; 导出的用户: 此处为指定导出的用户，建议和数据库的用户名一致\n脚本调整好后，可以双击启动测试是否能够成功备份。\n开启服务器的定时任务 利用windows服务器中的任务计划程序，来定时执行数据库的备份脚本。\n打开任务计划程序 Win + R 打开运行窗口，输入 taskschd.msc 确定，打开任务计划程序\nimage image 创建基本任务 点击左侧 创建基本任务\nimage image image image image 选择维护好的脚本\nimage ","date":"2023-11-10T00:00:00Z","image":"https://api.r10086.com/樱道随机图片api接口.php?图片系列=动漫综合1\u00265","permalink":"https://meowxue.github.io/p/windows%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%ADoracle%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD/","title":"Windows服务器中Oracle数据库定时备份"},{"content":"概述 大多数的linux发行版都默认安装了corn服务和crontab工具。cron服务是一个用于执行定时任务的后台服务，而crontab是用于编辑和管理用户的定时任务的命令行工具。通过crontab工具，用户可以添加、编辑、删除定时任务的执行时间和要运行的命令或者脚本。\n利用定时执行备份的shell脚本。\nshell脚本 #!/bin/bash #配置数据库的环境变量 export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/db_1/ export PATH=$ORACLE_HOME/bin:$PATH #备份文件存放位置 BACKUP=/usr/local/DBback/ #数据库目录对象 DIRECTORY=HRPBACKUP #当前时间 DATETIME=$(date +%Y-%m-%d_%H%M%S) echo $DATETIME #数据库地址 HOST=127.0.0.1/orcl USERNAME=username PASSWORD=123456 #创建备份目录，如果不存在就创建 [ ! -d \u0026#34;${BACKUP}\u0026#34; ] \u0026amp;\u0026amp; mkdir -p \u0026#34;${BACKUP}\u0026#34; #打印导出命令 echo \u0026#34;expdp ${USERNAME}/${PASSWORD}@${HOST} directory=${DIRECTORY} dumpfile=${DATETIME}_back.dmp logfile=${DATETIME}.log schemas=${USERNAME} compression=all\u0026#34; #备份数据库 expdp ${USERNAME}/${PASSWORD}@${HOST} directory=${DIRECTORY} dumpfile=${DATETIME}_back.dmp logfile=${DATETIME}.log schemas=${USERNAME} compression=all #删除10天前的数据 find ${BACKUP} -atime +10 -name \u0026#34;*_back.dmp\u0026#34; -exec rm -ef {} \\; echo \u0026#34;备份完成\u0026#34; 注意的点和相关的问题 1.为什么要再次设置环境变量? #配置数据库的环境变量 export ORACLE_HOME=/home/oracle/app/oracle/product/11.2.0/db_1/ export PATH=$ORACLE_HOME/bin:$PATH cron运行的环境和正常的shell执行环境不同。在正常情况下直接执行备份的shell脚本 expdp 命令可以被正确识别，但放到 crontab 中，expdp 命令将会出错，错误信息大概如下：\nUDE-00013: Message 13 not found; No message file for product=RDBMS, facility=UDE\rUDE-00019: You may need to set ORACLE_HOME to your Oracle software directory export 将变量设置为环境变量，并且在当前shell会话及子进程中可见和可访问。\n2.数据库目录对象 此处为oracle的文件目录对象,类似于将路径起个变量名，并将这种对应关系保存在数据库中。\n查询所有文件目录\nSELECT directory_name, directory_path FROM all_directories; 查询结果中的 directory_path 要与 脚本中的 BACKUP 路径一致。\n创建文件目录\nCREATE DIRECTORY hrpbackup AS \u0026#39;备份文件要存放的路径\u0026#39;; 授予公共用户对目录（directory）的读取和写入权限。（非必须）\ngrant read,write on directory 目录对象 to public; 3.脚本完成后 给脚本添加可执行权限\nchmod +x 备份.sh 创建的目录 BACKUP 也需要设置权限\nchmod 777 /usr/local/DBback 定时 查询当前所有的定时任务\ncrontab -l 编辑定时任务\ncrontab -e crontab 相关命令\n(1) 语法\rcrontab [-u \u0026lt;用户名称\u0026gt;][配置文件] 或 crontab { -l | -r | -e }\r-u #\u0026lt;用户名称\u0026gt; 是指设定指定\u0026lt;用户名称\u0026gt;的定时任务，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user 的话，就是表示设定自己的定时任务。\r-l #列出该用户的定时任务设置。\r-r #删除该用户的定时任务设置。\r-e #编辑该用户的定时任务设置。\r(2) 命令时间格式：\r* * *　*　*　command\r分　时　日　月　周　命令\r第1列表示分钟1～59 每分钟用*或者 */1表示\r第2列表示小时1～23（0表示0点）\r第3列表示日期1～31\r第4列表示月份1～12\r第5列标识号星期0～6（0表示星期天）\r第6列要运行的命令\r(3)一些Crontab定时任务例子：\r30 21 * * * /usr/local/etc/rc.d/lighttpd restart #每晚的21:30 重启apache\r45 4 1,10,22 * * /usr/local/etc/rc.d/lighttpd restart #每月1、10、22日的4 : 45重启apache\r10 1 * * 6,0 /usr/local/etc/rc.d/lighttpd restart #每周六、周日的1 : 10重启apache\r0,30 18-23 * * * /usr/local/etc/rc.d/lighttpd restart #每天18 : 00至23 : 00之间每隔30分钟重启apache\r0 23 * * 6 /usr/local/etc/rc.d/lighttpd restart #每星期六的11 : 00 pm重启apache\r* 23-7/1 * * * /usr/local/etc/rc.d/lighttpd restart #晚上11点到早上7点之间，每隔一小时重启apache\r* */1 * * * /usr/local/etc/rc.d/lighttpd restart #每一小时重启apache\r0 11 4 * mon-wed /usr/local/etc/rc.d/lighttpd restart #每月的4号与每周一到周三的11点重启apache\r0 4 1 jan * /usr/local/etc/rc.d/lighttpd restart #一月一号的4点重启apache\r*/30 * * * * /usr/sbin/ntpdate cn.pool.ntp.org #每半小时同步一下时间\r0 */2 * * * /sbin/service httpd restart #每两个小时重启一次apache 50 7 * * * /sbin/service sshd start #每天7：50开启ssh服务 50 22 * * * /sbin/service sshd stop #每天22：50关闭ssh服务 0 0 1,15 * * fsck /home #每月1号和15号检查/home 磁盘 1 * * * * /home/bruce/backup #每小时的第一分执行 /home/bruce/backup这个文件 00 03 * * 1-5 find /home \u0026#34;*.xxx\u0026#34; -mtime +4 -exec rm {} \\; #每周一至周五3点钟，在目录/home中，查找文件名为*.xxx的文件，并删除4天前的文件。\r30 6 */10 * * ls #每月的1、11、21、31日是的6：30执行一次ls命令 例如：每天晚上11点30分执行定时备份脚本 /usr/local/backup.sh\n路径要写全\n30 11 * * * /usr/local/backup.sh crontab在线工具 https://tool.lu/crontab\n","date":"2023-08-30T00:00:00Z","image":"https://api.r10086.com/樱道随机图片api接口.php?图片系列=动漫综合1\u00266","permalink":"https://meowxue.github.io/p/linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%ADoracle%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD/","title":"Linux服务器中Oracle数据库定时备份"},{"content":"和外部系统做对接，对方提供了一个存储过程，对方为sqlserver数据库，我方为oracle数据库。 需求简单来说就是调用对方的存储过程获得结果，转储到我方库，后续在对数据进行处理。\n我写了个代码片段做测试，用jdbc来调用对方的存储过程，可是在调用后就直接报错了，错误信息如下\ncom.microsoft.sqlserver.jdbc.SQLServerException: 该语句没有返回结果集 我就不理解了，为啥用数据库连接工具调就没问题呢？是有结果集的呀。\n疯狂找资料，找帖子。最后终于是找到了。\n解决方法：\n换驱动包。对方数据库是SQL server2008，我用的是 sqljdbc4-4.0 。直接换了第三方开源的SQL Server数据库的JDBC驱动程序 jtds1.2。问题解决，调用存储过程的时候不再出错。 在存储过程首行添加 set nocount on （这个我没实验，因为存储过程没在我手里，操作不到） 最后记录一段jdbc调用存储结构的代码，一个参数，返回结果集\nimport java.sql.CallableStatement; import java.sql.Connection; import java.sql.DriverManager; import java.sql.ResultSet; import java.sql.Statement; import java.text.SimpleDateFormat; import java.util.ArrayList; import java.util.Calendar; import java.util.Date; import java.util.HashMap; import java.util.List; import java.util.Map; public class Test { final static String SERVERURL = \u0026#34;jdbc:jtds:sqlserver://127.0.0.1:1433;DatabaseName=XXX\u0026#34;; final static String SERVERDriver = \u0026#34;net.sourceforge.jtds.jdbc.Driver\u0026#34;; final static String SERVERUSERNAME = \u0026#34;username\u0026#34;; final static String SERVERPASSWORD = \u0026#34;password\u0026#34;; public static void main(String[] args) { try { //调用存储过程 Class.forName(SERVERDriver); Connection conn = DriverManager.getConnection(SERVERURL, SERVERUSERNAME, SERVERPASSWORD); System.out.println(\u0026#34;sql server连接成功\u0026#34;); String call = \u0026#34;{call 存储过程名称(?)}\u0026#34;; CallableStatement callableStatement = conn.prepareCall(call); callableStatement.setString(1, \u0026#34;2022-10-13\u0026#34;); ResultSet rs = callableStatement.executeQuery(); while(rs.next()) { System.out.println(rs.getString(\u0026#34;aaa\u0026#34;)); System.out.println(rs.getString(\u0026#34;bbb\u0026#34;)); System.out.println(rs.getString(\u0026#34;ccc\u0026#34;)); System.out.println(rs.getString(\u0026#34;ddd\u0026#34;)); } callableStatement.close(); conn.close(); } catch (Exception e) { e.printStackTrace(); } } } ","date":"2022-10-13T00:00:00Z","image":"https://api.r10086.com/樱道随机图片api接口.php?图片系列=动漫综合1\u00263","permalink":"https://meowxue.github.io/p/%E7%94%A8sqlserver%E5%AE%98%E6%96%B9%E9%A9%B1%E5%8A%A8%E5%8C%85%E8%B0%83%E7%94%A8%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%B8%AA%E5%9D%91/","title":"用sqlserver官方驱动包调用存储过程遇到的一个坑"},{"content":"NVM 是一个非常方便的node包管理工具，可以实现在NodeJS 各个不同版本之间自由的进行切换。 1.下载nvm安装包 官网地址： https://github.com/nvm-sh/nvm\n可选择最新的Releases版本，下面用0.38.0这个版本做示范\n示例版本地址：https://github.com/nvm-sh/nvm/archive/refs/tags/v0.38.0.tar.gz\n2.解压nvm tar -zxvf nvm-0.38.0.tar.gz 可以移动解压的文件到你想放的目录\n3.配置环境 打开 ~/.bashrc\nvim ~/.bashrc 在 ~/.bashrc 的末尾加上以下的语句\nexport NVM_DIR=\u0026#34;$HOME/nvm所在的目录\u0026#34; [ -s \u0026#34;$NVM_DIR/nvm.sh\u0026#34; ] \u0026amp;\u0026amp; \\. \u0026#34;$NVM_DIR/nvm.sh\u0026#34; # This loads nvm [ -s \u0026#34;$NVM_DIR/bash_completion\u0026#34; ] \u0026amp;\u0026amp; \\. \u0026#34;$NVM_DIR/bash_completion\u0026#34; # This loads nvm bash_completion # nodejs下载更换淘宝镜像 export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node 4.编译生效 source ~/.bashrc 验证是否成功，终端输入以下命令查看nvm版本号\nnvm -v 显示安装的版本号，即成功\n5.nvm常用命令 #查询目前线上所能安装的所有nodejs版本 nvm ls-remote #安装相应版本nodejs nvm install 14.19.3 #使用相应版本的nodejs nvm use 14.19.3 #列出已经安装的版本 nvm ls #卸载相应的nodejs nvm uninstall 14.19.3 #查看当前版本 nvm current 6.npm使用淘宝镜像 打开nvm目录下的 .npmrc在文件中添加下面的内容\nregistry=https://registry.npm.taobao.org ","date":"2022-05-27T00:00:00Z","image":"https://api.r10086.com/樱道随机图片api接口.php?图片系列=动漫综合1\u00264","permalink":"https://meowxue.github.io/p/linux%E4%B8%AD%E5%AE%89%E8%A3%85nvm/","title":"Linux中安装nvm"}]